{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiaorlova/Documents/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\n/*import PopupWithForm from './PopupWithForm.js';*/\n\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeletePopup, setIsDeletePopup] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [tooltipStatus, setTooltipStatus] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    api.getProfileInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.error(err);\n    });\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  useEffect(() => {\n    let jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          setEmail(res.data.email);\n          history.push('/');\n        }\n      }).catch(err => console.log(err));\n    }\n  }, [history]);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleDeleteCard() {\n    setIsDeletePopup(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePopup(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  }\n\n  function handleCardClick(Card) {\n    setSelectedCard(Card);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardDelete(deleteCard) {\n    api.removeCard(deleteCard).then(() => {\n      const newArr = cards.filter(card => card !== deleteCard);\n      setCards(newArr);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateUser(formData) {\n    api.editProfile(formData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(formData) {\n    api.updateAvatar(formData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.postCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function onRegister(email, password) {\n    auth.register(email, password).then(res => {\n      if (res.data._id) {\n        setTooltipStatus('success');\n        history.push('/sign-in');\n      }\n    }).catch(err => setTooltipStatus('fail'));\n  }\n\n  function onLogin({\n    password,\n    email\n  }) {\n    auth.authorize({\n      password,\n      email\n    }).then(data => {\n      if (data.token) {\n        setEmail(email);\n        localStorage.setItem('jwt', data.token);\n        setLoggedIn(true);\n        history.push('/');\n      }\n    }).catch(err => setTooltipStatus('fail'));\n  }\n\n  function onSignOut() {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    history.push('/sign-in');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onSignOut: onSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: onRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: onLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        status: tooltipStatus,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"frKmzU/7Urw9a2ajABy6UT9NAR0=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n/*<PopupWithForm\n                isOpen={isEditProfilePopupOpen}\n                onClose ={closeAllPopups}\n                name='edit-profile-form'\n                title='Редактирование профиля'\n                textButton='Сохранить'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"name\" required minLength=\"2\" maxLength=\"40\" />\n                <span id=\"name-error\" className=\"error\"></span>\n                <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"about-me\" required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"about-me-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n                isOpen={isEditAvatarPopupOpen}\n                onClose ={closeAllPopups}\n                name='avatar-form'\n                title='Обновить аватар'\n                textButton='Сохранить'>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"avatar-link\" placeholder=\"Название\" required />\n                <span id=\"avatar-link-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n             isOpen={isAddPlacePopupOpen}\n             onClose ={closeAllPopups}\n              name='add-card-form'\n               title='Новое место'\n               textButton='Создать'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"place-name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n                <span id=\"place-name-error\" className=\"error\"></span>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"image-link\" placeholder=\"Ссылка на картинку\" required />\n                <span id=\"image-link-error\" className=\"error\"></span>\n            </PopupWithForm>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasiaorlova/Documents/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","CurrentUserContext","api","auth","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Register","Login","InfoTooltip","ProtectedRoute","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePopup","setIsDeletePopup","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","email","setEmail","tooltipStatus","setTooltipStatus","history","getProfileInfo","then","res","catch","err","console","error","getInitialCards","data","jwt","localStorage","getItem","checkToken","push","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeleteCard","closeAllPopups","handleCardClick","Card","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","removeCard","newArr","filter","handleUpdateUser","formData","editProfile","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","postCard","onRegister","password","register","onLogin","authorize","token","setItem","onSignOut","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AAEA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA;;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDrB,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACsB,qBAAD,EAAwBC,wBAAxB,IAAoDvB,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACwB,mBAAD,EAAsBC,sBAAtB,IAAgDzB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC;AAAE8B,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACsC,KAAD,EAAQC,QAAR,IAAoBvC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwC,aAAD,EAAgBC,gBAAhB,IAAoCzC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM0C,OAAO,GAAGtC,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,GAAG,CAACqC,cAAJ,GACKC,IADL,CACWC,GAAD,IAAS;AACXZ,MAAAA,cAAc,CAACY,GAAD,CAAd;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KANL;AAQAzC,IAAAA,GAAG,CAAC4C,eAAJ,GACKN,IADL,CACWO,IAAD,IAAU;AACZhB,MAAAA,QAAQ,CAACgB,IAAD,CAAR;AACH,KAHL,EAIKL,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KANL;AAOH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA9C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImD,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;;AACA,QAAIF,GAAJ,EAAS;AACL7C,MAAAA,IAAI,CAACgD,UAAL,CAAgBH,GAAhB,EAAqBR,IAArB,CAA2BC,GAAD,IAAS;AAC/B,YAAIA,GAAJ,EAAS;AACLR,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,UAAAA,QAAQ,CAACM,GAAG,CAACM,IAAJ,CAASb,KAAV,CAAR;AACAI,UAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH;AACJ,OAND,EAOKV,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACS,GAAR,CAAYV,GAAZ,CAPlB;AAQH;AACJ,GAZQ,EAaH,CAACL,OAAD,CAbG,CAAT;;AAeA,WAASgB,qBAAT,GAAiC;AAC7BnC,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAED,WAASoC,sBAAT,GAAkC;AAC9BtC,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH;;AAED,WAASuC,mBAAT,GAA+B;AAC3BnC,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;;AACD,WAASoC,gBAAT,GAA4B;AACxBlC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AAED,WAASmC,cAAT,GAA0B;AACtBzC,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,IAAAA,eAAe,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAAD,CAAf;AACH;;AAED,WAASgC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BnC,IAAAA,eAAe,CAACmC,IAAD,CAAf;AACH;;AAED,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAE1B,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUvC,WAAW,CAACuC,GAA3C,CAAhB;AAEAjE,IAAAA,GAAG,CAACkE,oBAAJ,CAAyBN,IAAI,CAACK,GAA9B,EAAmC,CAACJ,OAApC,EAA6CvB,IAA7C,CAAmD6B,OAAD,IAAa;AAC3DtC,MAAAA,QAAQ,CAAEuC,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAhD,CAAZ,CAAR;AACH,KAFD,EAGK9B,KAHL,CAGYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KALL;AAMH;;AAED,WAAS8B,gBAAT,CAA0BC,UAA1B,EAAsC;AAClCxE,IAAAA,GAAG,CAACyE,UAAJ,CAAeD,UAAf,EACKlC,IADL,CACU,MAAM;AACR,YAAMoC,MAAM,GAAG9C,KAAK,CAAC+C,MAAN,CAAaf,IAAI,IAAIA,IAAI,KAAKY,UAA9B,CAAf;AACA3C,MAAAA,QAAQ,CAAC6C,MAAD,CAAR;AACH,KAJL,EAKKlC,KALL,CAKYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAPL;AAQH;;AAED,WAASmC,gBAAT,CAA0BC,QAA1B,EAAoC;AAChC7E,IAAAA,GAAG,CAAC8E,WAAJ,CAAgBD,QAAhB,EACKvC,IADL,CACWC,GAAD,IAAS;AACXZ,MAAAA,cAAc,CAACY,GAAD,CAAd;AACAiB,MAAAA,cAAc;AACjB,KAJL,EAKKhB,KALL,CAKYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAPL;AAQH;;AAED,WAASsC,kBAAT,CAA4BF,QAA5B,EAAsC;AACnC7E,IAAAA,GAAG,CAACgF,YAAJ,CAAiBH,QAAjB,EACMvC,IADN,CACYC,GAAD,IAAS;AACXZ,MAAAA,cAAc,CAACY,GAAD,CAAd;AACAiB,MAAAA,cAAc;AACjB,KAJN,EAKMhB,KALN,CAKaC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAPN;AASF;;AAED,WAASwC,oBAAT,CAA8Bd,OAA9B,EAAuC;AACnCnE,IAAAA,GAAG,CAACkF,QAAJ,CAAaf,OAAb,EACK7B,IADL,CACW6B,OAAD,IAAa;AACftC,MAAAA,QAAQ,CAAC,CAACsC,OAAD,EAAU,GAAGvC,KAAb,CAAD,CAAR;AACA4B,MAAAA,cAAc;AACjB,KAJL,EAKKhB,KALL,CAKYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAPL;AAQH;;AAED,WAAS0C,UAAT,CAAoBnD,KAApB,EAA2BoD,QAA3B,EAAqC;AACjCnF,IAAAA,IAAI,CAACoF,QAAL,CAAcrD,KAAd,EAAqBoD,QAArB,EACK9C,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACM,IAAJ,CAASoB,GAAb,EAAkB;AACd9B,QAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACAC,QAAAA,OAAO,CAACc,IAAR,CAAa,UAAb;AACH;AACJ,KANL,EAOKV,KAPL,CAOWC,GAAG,IAAIN,gBAAgB,CAAC,MAAD,CAPlC;AASH;;AAED,WAASmD,OAAT,CAAiB;AAAEF,IAAAA,QAAF;AAAYpD,IAAAA;AAAZ,GAAjB,EAAsC;AAClC/B,IAAAA,IAAI,CAACsF,SAAL,CAAe;AAAEH,MAAAA,QAAF;AAAYpD,MAAAA;AAAZ,KAAf,EACKM,IADL,CACUO,IAAI,IAAI;AACV,UAAIA,IAAI,CAAC2C,KAAT,EAAgB;AACZvD,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAe,QAAAA,YAAY,CAAC0C,OAAb,CAAqB,KAArB,EAA4B5C,IAAI,CAAC2C,KAAjC;AACAzD,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH;AACJ,KARL,EASKV,KATL,CASWC,GAAG,IAAIN,gBAAgB,CAAC,MAAD,CATlC;AAUH;;AAED,WAASuD,SAAT,GAAqB;AACjB3C,IAAAA,YAAY,CAAC4C,UAAb,CAAwB,KAAxB;AACA5D,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAK,IAAAA,OAAO,CAACc,IAAR,CAAa,UAAb;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAExB,WAApC;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEM,KAAf;AAAsB,QAAA,SAAS,EAAE0D;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA,gCACA,QAAC,cAAD;AACQ,UAAA,KAAK,MADb;AACc,UAAA,IAAI,EAAC,GADnB;AAEQ,UAAA,QAAQ,EAAE5D,QAFlB;AAGQ,UAAA,YAAY,EAAEsB,qBAHtB;AAIQ,UAAA,aAAa,EAAEC,sBAJvB;AAKQ,UAAA,UAAU,EAAEC,mBALpB;AAMQ,UAAA,WAAW,EAAEG,eANrB;AAOQ,UAAA,KAAK,EAAE7B,KAPf;AAQQ,UAAA,UAAU,EAAE+B,cARpB;AASQ,UAAA,YAAY,EAAEY,gBATtB;AAUQ,UAAA,SAAS,EAAEpE;AAVnB;AAAA;AAAA;AAAA;AAAA,gBADA,eAcI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,UAAU,EAAEgF;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAiBI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEG;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAkCI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAmCI,QAAC,UAAD;AACI,QAAA,IAAI,EAAEhE,YADV;AAEI,QAAA,OAAO,EAAEkC;AAFb;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAsCI,QAAC,gBAAD;AACI,QAAA,MAAM,EAAE1C,sBADZ;AAEI,QAAA,OAAO,EAAE0C,cAFb;AAGI,QAAA,YAAY,EAAEoB;AAHlB;AAAA;AAAA;AAAA;AAAA,cAtCJ,eA0CI,QAAC,eAAD;AACI,QAAA,MAAM,EAAE5D,qBADZ;AAEI,QAAA,OAAO,EAAEwC,cAFb;AAGI,QAAA,cAAc,EAAEuB;AAHpB;AAAA;AAAA;AAAA;AAAA,cA1CJ,eA8CI,QAAC,aAAD;AACI,QAAA,MAAM,EAAE7D,mBADZ;AAEI,QAAA,OAAO,EAAEsC,cAFb;AAGI,QAAA,UAAU,EAAEyB;AAHhB;AAAA;AAAA;AAAA;AAAA,cA9CJ,eAmDK,QAAC,WAAD;AACG,QAAA,MAAM,EAAE/C,aADX;AAEG,QAAA,OAAO,EAAEsB;AAFZ;AAAA;AAAA;AAAA;AAAA,cAnDL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH;;GArOQ3C,G;UAYWf,U;;;KAZXe,G;AAuOT,eAAeA,GAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\n/*import PopupWithForm from './PopupWithForm.js';*/\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport ProtectedRoute from './ProtectedRoute.js';\n\n\n\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isDeletePopup, setIsDeletePopup] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [email, setEmail] = useState('');\n    const [tooltipStatus, setTooltipStatus] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        api.getProfileInfo()\n            .then((res) => {\n                setCurrentUser(res);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        api.getInitialCards()\n            .then((data) => {\n                setCards(data);\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }, [])\n\n    useEffect(() => {\n        let jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.checkToken(jwt).then((res) => {\n                if (res) {\n                    setLoggedIn(true);\n                    setEmail(res.data.email)\n                    history.push('/');\n                }\n            })\n                .catch(err => console.log(err));\n        }\n    }\n        , [history])\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n    function handleDeleteCard() {\n        setIsDeletePopup(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsDeletePopup(false);\n        setSelectedCard({ name: '', link: '' });\n    }\n\n    function handleCardClick(Card) {\n        setSelectedCard(Card);\n    }\n\n    function handleCardLike(card) {\n\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function handleCardDelete(deleteCard) {\n        api.removeCard(deleteCard)\n            .then(() => {\n                const newArr = cards.filter(card => card !== deleteCard);\n                setCards(newArr);\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }\n\n    function handleUpdateUser(formData) {\n        api.editProfile(formData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function handleUpdateAvatar(formData) {\n       api.updateAvatar(formData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n        \n    }\n\n    function handleAddPlaceSubmit(newCard) {\n        api.postCard(newCard)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function onRegister(email, password) {\n        auth.register(email, password)\n            .then(res => {\n                if (res.data._id) {\n                    setTooltipStatus('success');\n                    history.push('/sign-in')\n                }\n            })\n            .catch(err => setTooltipStatus('fail'));\n\n    }\n\n    function onLogin({ password, email }) {\n        auth.authorize({ password, email })\n            .then(data => {\n                if (data.token) {\n                    setEmail(email);\n                    localStorage.setItem('jwt', data.token);\n                    setLoggedIn(true);\n                    history.push('/');\n                }\n            })\n            .catch(err => setTooltipStatus('fail'));\n    }\n\n    function onSignOut() {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n        history.push('/sign-in');\n    }\n\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header email={email} onSignOut={onSignOut} />\n                <Switch>\n                <ProtectedRoute\n                        exact path='/'\n                        loggedIn={loggedIn}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        component={Main}\n                    >\n                    </ProtectedRoute>\n                    <Route exact path='/sign-up'>\n                        <Register onRegister={onRegister} />\n                    </Route>\n                    <Route exact path='/sign-in'>\n                        <Login onLogin={onLogin} />\n                    </Route>\n\n                </Switch>\n                {/*<Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    onRemoveCard={handleDeleteCard}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />*/}\n                <Footer />\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups} />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                 <InfoTooltip\n                    status={tooltipStatus}\n                    onClose={closeAllPopups} />\n                {/*<PopupWithForm\n                    isOpen={isDeletePopup}\n                    onClose={closeAllPopups}\n                    name='delete-card-form'\n                    title='Вы уверены?'\n                textButton='Да' />*/}\n            </CurrentUserContext.Provider>\n\n        </div>\n    );\n}\n\nexport default App;\n\n\n/*<PopupWithForm\n                isOpen={isEditProfilePopupOpen}\n                onClose ={closeAllPopups}\n                name='edit-profile-form'\n                title='Редактирование профиля'\n                textButton='Сохранить'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"name\" required minLength=\"2\" maxLength=\"40\" />\n                <span id=\"name-error\" className=\"error\"></span>\n                <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"about-me\" required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"about-me-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n                isOpen={isEditAvatarPopupOpen}\n                onClose ={closeAllPopups}\n                name='avatar-form'\n                title='Обновить аватар'\n                textButton='Сохранить'>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"avatar-link\" placeholder=\"Название\" required />\n                <span id=\"avatar-link-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n             isOpen={isAddPlacePopupOpen}\n             onClose ={closeAllPopups}\n              name='add-card-form'\n               title='Новое место'\n               textButton='Создать'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"place-name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n                <span id=\"place-name-error\" className=\"error\"></span>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"image-link\" placeholder=\"Ссылка на картинку\" required />\n                <span id=\"image-link-error\" className=\"error\"></span>\n            </PopupWithForm>*/"]},"metadata":{},"sourceType":"module"}