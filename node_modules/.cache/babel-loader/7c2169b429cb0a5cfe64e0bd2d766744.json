{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiaorlova/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js'; //import PopupWithForm from './PopupWithForm.js';\n\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); //const [isDeletePopup, setIsDeletePopup] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n  const [currentUser, setCurrentUser] = useState('');\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getProfileInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.error(err);\n    });\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  /*function handleDeleteCard(){\n      setIsDeletePopup(true);\n  }*/\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false); //setIsDeletePopup(false);\n\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  }\n\n  function handleCardClick(Card) {\n    setSelectedCard(Card);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.error(err);\n    });\n  } //DELETE CARD\n\n\n  function handleCardDelete(deleteCard) {\n    api.removeCard(deleteCard).then(() => {\n      const newArr = cards.filter(card => card !== deleteCard);\n      setCards(newArr);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateUser(formData) {\n    api.editProfile(formData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(formData) {\n    api.updateAvatar(formData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  } //Добавление карточки\n\n\n  function handleAddPlaceSubmit(newCard) {\n    api.postCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick //onRemoveCard={handleDeleteCard}\n        ,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"pgQ1RD9uy6LB4TJMBEuhjOsYvnk=\");\n\n_c = App;\nexport default App;\n/*<PopupWithForm\n                isOpen={isEditProfilePopupOpen}\n                onClose ={closeAllPopups}\n                name='edit-profile-form'\n                title='Редактирование профиля'\n                textButton='Сохранить'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"name\" required minLength=\"2\" maxLength=\"40\" />\n                <span id=\"name-error\" className=\"error\"></span>\n                <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"about-me\" required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"about-me-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n                isOpen={isEditAvatarPopupOpen}\n                onClose ={closeAllPopups}\n                name='avatar-form'\n                title='Обновить аватар'\n                textButton='Сохранить'>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"avatar-link\" placeholder=\"Название\" required />\n                <span id=\"avatar-link-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n             isOpen={isAddPlacePopupOpen}\n             onClose ={closeAllPopups}\n              name='add-card-form'\n               title='Новое место'\n               textButton='Создать'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"place-name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n                <span id=\"place-name-error\" className=\"error\"></span>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"image-link\" placeholder=\"Ссылка на картинку\" required />\n                <span id=\"image-link-error\" className=\"error\"></span>\n            </PopupWithForm>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasiaorlova/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","CurrentUserContext","api","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","getProfileInfo","then","res","catch","err","console","error","getInitialCards","data","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","Card","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","removeCard","newArr","filter","handleUpdateUser","formData","editProfile","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","postCard"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\n//import PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\n\n\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    //const [isDeletePopup, setIsDeletePopup] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n    const [currentUser, setCurrentUser] = useState('');\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        api.getProfileInfo()\n            .then((res) => {\n                setCurrentUser(res);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        api.getInitialCards()\n            .then((data) => {\n                setCards(data);\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }, [])\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n    /*function handleDeleteCard(){\n        setIsDeletePopup(true);\n    }*/\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        //setIsDeletePopup(false);\n        setSelectedCard({ name: '', link: '' });\n    }\n\n    function handleCardClick(Card) {\n        setSelectedCard(Card);\n    }\n\n    function handleCardLike(card) {\n\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    //DELETE CARD\n    function handleCardDelete(deleteCard) {\n        api.removeCard(deleteCard)\n            .then(() => {\n                const newArr = cards.filter(card => card !== deleteCard);\n                setCards(newArr);\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }\n\n    function handleUpdateUser(formData) {\n        api.editProfile(formData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function handleUpdateAvatar(formData) {\n        api.updateAvatar(formData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    //Добавление карточки\n    function handleAddPlaceSubmit(newCard) {\n        api.postCard(newCard)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n    }\n\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    //onRemoveCard={handleDeleteCard}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups} />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                {/*<PopupWithForm\n            //isOpen={isDeletePopup}\n            onClose ={closeAllPopups}\n            name='delete-card-form'\n            title='Вы уверены?'\n            textButton='Да'/>*/}\n                <Footer />\n            </CurrentUserContext.Provider>\n\n        </div>\n    );\n}\n\nexport default App;\n\n\n/*<PopupWithForm\n                isOpen={isEditProfilePopupOpen}\n                onClose ={closeAllPopups}\n                name='edit-profile-form'\n                title='Редактирование профиля'\n                textButton='Сохранить'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"name\" required minLength=\"2\" maxLength=\"40\" />\n                <span id=\"name-error\" className=\"error\"></span>\n                <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"about-me\" required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"about-me-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n                isOpen={isEditAvatarPopupOpen}\n                onClose ={closeAllPopups}\n                name='avatar-form'\n                title='Обновить аватар'\n                textButton='Сохранить'>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"avatar-link\" placeholder=\"Название\" required />\n                <span id=\"avatar-link-error\" className=\"error\"></span>\n            </PopupWithForm>\n            <PopupWithForm\n             isOpen={isAddPlacePopupOpen}\n             onClose ={closeAllPopups}\n              name='add-card-form'\n               title='Новое место'\n               textButton='Создать'>\n                <input type=\"text\" className=\"popup__input\" name=\"name\" id=\"place-name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n                <span id=\"place-name-error\" className=\"error\"></span>\n                <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"image-link\" placeholder=\"Ссылка на картинку\" required />\n                <span id=\"image-link-error\" className=\"error\"></span>\n            </PopupWithForm>*/"]},"metadata":{},"sourceType":"module"}