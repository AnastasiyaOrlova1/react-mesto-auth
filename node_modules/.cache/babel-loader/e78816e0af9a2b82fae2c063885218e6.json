{"ast":null,"code":"/*class Api {\n    constructor({ url, headers }) {\n        this._url = url;\n        this._headers = headers\n    }\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    getInitialCards() {\n        return fetch(`${this._url}cards`, {\n                headers: this._headers\n            })\n            .then(this._checkResponse)\n    }\n    getProfileInfo() {\n        return fetch(`${this._url}users/me`, {\n                headers: this._headers\n            })\n            .then(this._checkResponse)\n\n    }\n    editProfile(formData) {\n        return fetch(`${this._url}users/me`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: formData.name,\n                    about: formData.about\n                })\n            })\n            .then(this._checkResponse)\n    }\n    postCard(newCard) {\n        return fetch(`${this._url}cards`, {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: newCard.name,\n                    link: newCard.link\n                })\n            })\n            .then(this._checkResponse)\n    }\n    removeCard(item) {\n        return fetch(`${this._url}cards/${item._id}`, {\n                method: \"DELETE\",\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n    putLike(id) {\n        return fetch(`${this._url}cards/likes/${id}`, {\n                method: \"PUT\",\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n    deleteLike(id) {\n        return fetch(`${this._url}cards/likes/${id}`, {\n                method: \"DELETE\",\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n\n    changeLikeCardStatus(id, isLiked) {\n        return fetch(`${this._url}cards/likes/${id}`, {\n                method: isLiked ? 'PUT' : 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n    \n    updateAvatar(linkAvatar) {\n        return fetch(`${this._url}users/me/avatar`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: linkAvatar.avatar\n                })\n            })\n            .then(this._checkResponse)\n    }\n}\n\nconst config = {\n    url: 'https://mesto.nomoreparties.co/v1/cohort-27/',\n    headers: {\n        authorization: '1c569080-bc35-458b-a387-7ec8b91017a5',\n        'Content-Type': 'application/json'\n    }\n}\n\nconst api = new Api(config)\n\nexport default api;*/","map":{"version":3,"sources":["/Users/anastasiaorlova/mesto-react/src/utils/api.js"],"names":[],"mappingssourcesContent":["/*class Api {\n    constructor({ url, headers }) {\n        this._url = url;\n        this._headers = headers\n    }\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    getInitialCards() {\n        return fetch(`${this._url}cards`, {\n                headers: this._headers\n            })\n            .then(this._checkResponse)\n    }\n    getProfileInfo() {\n        return fetch(`${this._url}users/me`, {\n                headers: this._headers\n            })\n            .then(this._checkResponse)\n\n    }\n    editProfile(formData) {\n        return fetch(`${this._url}users/me`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: formData.name,\n                    about: formData.about\n                })\n            })\n            .then(this._checkResponse)\n    }\n    postCard(newCard) {\n        return fetch(`${this._url}cards`, {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: newCard.name,\n                    link: newCard.link\n                })\n            })\n            .then(this._checkResponse)\n    }\n    removeCard(item) {\n        return fetch(`${this._url}cards/${item._id}`, {\n                method: \"DELETE\",\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n    putLike(id) {\n        return fetch(`${this._url}cards/likes/${id}`, {\n                method: \"PUT\",\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n    deleteLike(id) {\n        return fetch(`${this._url}cards/likes/${id}`, {\n                method: \"DELETE\",\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n\n    changeLikeCardStatus(id, isLiked) {\n        return fetch(`${this._url}cards/likes/${id}`, {\n                method: isLiked ? 'PUT' : 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n    }\n    \n    updateAvatar(linkAvatar) {\n        return fetch(`${this._url}users/me/avatar`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: linkAvatar.avatar\n                })\n            })\n            .then(this._checkResponse)\n    }\n}\n\nconst config = {\n    url: 'https://mesto.nomoreparties.co/v1/cohort-27/',\n    headers: {\n        authorization: '1c569080-bc35-458b-a387-7ec8b91017a5',\n        'Content-Type': 'application/json'\n    }\n}\n\nconst api = new Api(config)\n\nexport default api;*/\n\n"]},"metadata":{},"sourceType":"module"}