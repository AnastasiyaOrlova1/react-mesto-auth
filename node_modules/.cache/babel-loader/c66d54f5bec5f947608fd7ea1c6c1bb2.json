{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiaorlova/Documents/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup.js';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); //const [isDeletePopup, setIsDeletePopup] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [tooltipStatus, setTooltipStatus] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    api.getProfileInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.error(err);\n    });\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  useEffect(() => {\n    let jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          setEmail(res.data.email);\n          history.push('/');\n        }\n      }).catch(err => console.log(err));\n    }\n  }, [history]); //LIKE CARD\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardDelete(deleteCard) {\n    api.removeCard(deleteCard).then(() => {\n      const newArr = cards.filter(card => card !== deleteCard);\n      setCards(newArr);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  /*\n  function handleDeleteCard(){\n      setIsDeletePopup(true);\n  }*/\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false); //setIsDeletePopup(false);\n\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n    setTooltipStatus('');\n  }\n\n  function handleCardClick(Card) {\n    setSelectedCard(Card);\n  }\n\n  function handleUpdateUser(formData) {\n    api.editProfile(formData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleUpdateAvatar(formData) {\n    api.updateAvatar(formData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.postCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function onRegister(email, password) {\n    auth.register(email, password).then(res => {\n      if (res.data._id) {\n        setTooltipStatus('success');\n        history.push('/sign-in');\n      }\n    }).catch(err => setTooltipStatus('fail'));\n  }\n\n  function onLogin({\n    password,\n    email\n  }) {\n    auth.authorize({\n      password,\n      email\n    }).then(data => {\n      if (data.token) {\n        setEmail(email);\n        localStorage.setItem('jwt', data.token);\n        setLoggedIn(true);\n        history.push('/');\n      }\n    }).catch(err => setTooltipStatus('fail'));\n  }\n\n  function onSignOut() {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    history.push('/sign-in');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onSignOut: onSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: onRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: onLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        status: tooltipStatus,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"+9eQLu5hxGSXOW/0jDRPoRm24E0=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anastasiaorlova/Documents/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","CurrentUserContext","api","auth","Header","Main","Footer","AddPlacePopup","EditProfilePopup","EditAvatarPopup","ImagePopup","Register","Login","InfoTooltip","ProtectedRoute","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","email","setEmail","tooltipStatus","setTooltipStatus","history","getProfileInfo","then","res","catch","err","console","error","getInitialCards","data","jwt","localStorage","getItem","checkToken","push","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","removeCard","newArr","filter","closeByEscape","e","key","closeAllPopups","document","addEventListener","removeEventListener","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","Card","handleUpdateUser","formData","editProfile","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","postCard","onRegister","password","register","onLogin","authorize","token","setItem","onSignOut","removeItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup.js';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    //const [isDeletePopup, setIsDeletePopup] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({ name: '', link: '' });\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [email, setEmail] = useState('');\n    const [tooltipStatus, setTooltipStatus] = useState('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        api.getProfileInfo()\n            .then((res) => {\n                setCurrentUser(res);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        api.getInitialCards()\n            .then((data) => {\n                setCards(data);\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }, [])\n\n    useEffect(() => {\n        let jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.checkToken(jwt).then((res) => {\n                if (res) {\n                    setLoggedIn(true);\n                    setEmail(res.data.email)\n                    history.push('/');\n                }\n            })\n                .catch(err => console.log(err));\n        }\n    }\n        , [history])\n\n\n    //LIKE CARD\n    function handleCardLike(card) {\n\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function handleCardDelete(deleteCard) {\n        api.removeCard(deleteCard)\n            .then(() => {\n                const newArr = cards.filter(card => card !== deleteCard);\n                setCards(newArr);\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }\n\n    useEffect(() => {\n        const closeByEscape = (e) => {\n            if (e.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n\n        document.addEventListener('keydown', closeByEscape)\n\n        return () => document.removeEventListener('keydown', closeByEscape)\n    }, [])\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n    /*\n    function handleDeleteCard(){\n        setIsDeletePopup(true);\n    }*/\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        //setIsDeletePopup(false);\n        setSelectedCard({ name: '', link: '' });\n        setTooltipStatus('');\n    }\n    function handleCardClick(Card) {\n        setSelectedCard(Card);\n    }\n\n    function handleUpdateUser(formData) {\n        api.editProfile(formData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function handleUpdateAvatar(formData) {\n        api.updateAvatar(formData)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function handleAddPlaceSubmit(newCard) {\n        api.postCard(newCard)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    function onRegister(email, password) {\n        auth.register(email, password)\n            .then(res => {\n                if (res.data._id) {\n                    setTooltipStatus('success');\n                    history.push('/sign-in')\n                }\n            })\n            .catch(err => setTooltipStatus('fail'));\n\n    }\n\n    function onLogin({ password, email }) {\n        auth.authorize({ password, email })\n            .then(data => {\n                if (data.token) {\n                    setEmail(email);\n                    localStorage.setItem('jwt', data.token);\n                    setLoggedIn(true);\n                    history.push('/');\n                }\n            })\n            .catch(err => setTooltipStatus('fail'));\n    }\n\n    function onSignOut() {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n        history.push('/sign-in');\n    }\n\n    return (\n\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header email={email} onSignOut={onSignOut} />\n                <Switch>\n                    <ProtectedRoute\n                        exact path='/'\n                        loggedIn={loggedIn}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        component={Main}\n                    >\n                    </ProtectedRoute>\n                    <Route exact path='/sign-up'>\n                        <Register onRegister={onRegister} />\n                    </Route>\n                    <Route exact path='/sign-in'>\n                        <Login onLogin={onLogin} />\n                    </Route>\n\n                </Switch>\n                {/*<PopupWithForm\n            isOpen={isDeletePopup}\n            onClose ={closeAllPopups}\n            name='delete-card-form'\n            title='Вы уверены?'\n            textButton='Да'/>*/}\n                <Footer />\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups} />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                <InfoTooltip\n                    status={tooltipStatus}\n                    onClose={closeAllPopups} />\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}